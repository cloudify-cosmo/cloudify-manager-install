[program:cloudify-mgmtworker]
user=cfyuser
group=cfyuser
command=/opt/mgmtworker/env/bin/python -m mgmtworker.worker --queue "cloudify.management" --max-workers {{ mgmtworker.max_workers }} --hooks-queue "cloudify-hooks" --cluster-service-queue {{ mgmtworker.cluster_service_queue | default('cluster-queue') }}
environment=
    HOME="/etc/cloudify",
    USER="cfyuser",
    MGMTWORKER_HOME="{{ mgmtworker.home_dir }}",
    VIRTUALENV_DIR="{{ mgmtworker.home_dir }}/env",
    AGENT_WORK_DIR="{{ mgmtworker.home_dir }}/work",
    AGENT_LOG_DIR="{{ mgmtworker.log_dir }}",
    AGENT_LOG_LEVEL="{{ mgmtworker.log_level }}",
    MANAGEMENT_USER="root",
    MANAGER_NAME="{{ manager.hostname }}",
    REST_HOST="{{ networks.default }}",
    REST_PORT="{{ constants.internal_rest_port }}",
    LOCAL_REST_CERT_FILE="{{ constants.ca_cert_path }}",
    BROKER_SSL_CERT_PATH="{{ rabbitmq.ca_path }}",
    KERBEROS_ENV=false,
    MANAGER_FILE_SERVER_URL="{{ manager.file_server_url }}",
    MANAGER_FILE_SERVER_ROOT="{{ manager.file_server_root }}",
    MAX_WORKERS="{{ mgmtworker.max_workers }}",
    MIN_WORKERS="{{ mgmtworker.min_workers }}",
    CLUSTER_SERVICE_QUEUE="{{ mgmtworker.cluster_service_queue }}"{%- for key, value in mgmtworker.extra_env.items() -%},{{ key }}="{{ value }}"{%- endfor -%}{%- if postgresql_client.ssl_client_verification -%},PGSSLCERT={{ ssl_inputs.postgresql_client_cert_path }},PGSSLKEY={{ ssl_inputs.postgresql_client_key_path }}{%- endif -%}
