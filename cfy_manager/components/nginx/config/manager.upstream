# Upstream for Cloudify stage.
upstream cloudify-stage {
  server 127.0.0.1:8088;
}

# Upstream for Cloudify composer.
upstream cloudify-composer {
  server 127.0.0.1:3000;
}

# Upstream for Cloudify's Rest Service.
upstream cloudify-rest {
  server 127.0.0.1:{{ restservice.port }};
}

{% for listener in nginx.listeners -%}
server {
  listen              {{ listener.port }} {% if listener.ssl %}ssl http2{% endif %};
  {% if ipv6_enabled -%}
  listen              [::]:{{ listener.port }} {% if listener.ssl %}ssl http2{% endif %};
  {%- endif %}
  server_name         {{ listener.server_name }};

  {% if listener.ssl %}
  ssl_certificate     {{ listener.cert_path }};
  ssl_certificate_key {{ listener.key_path }};
  {% endif %}

  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  include "/etc/nginx/conf.d/logs-conf.cloudify";

  # serve the UI
  include "/etc/nginx/conf.d/ui-locations.cloudify";

  # serve the Composer
  include "/etc/nginx/conf.d/composer-location.cloudify";

  # Serves the Rest Service (backed by the cloudify-rest upstream).
  include "/etc/nginx/conf.d/rest-location.cloudify";

  # Serves the File Server and proxy for the Cloudify-API.
  include "/etc/nginx/conf.d/authd-location.cloudify";
}
{% endfor %}

{% if nginx.nonssl_access_blocked %}
server {
  listen 80;
  {% if ipv6_enabled -%}
  listen              [::]:80;
  {%- endif %}
  server_name _;

  # For REST API requests, return HTTP 400.
  # We don't want to automatically redirect API requests which
  # may contain sensitive info.
  location ~ ^/api/ {
    return 400 '{"message": "SSL must be used for API access on SSL-enabled managers.", "error_code": "SSL_REQUIRED"}';
  }

  # Other than API requests, and unless otherwise noted: redirect
  # to HTTPS using HTTP code 308 to preserve the request's body.
  location / {
    return 308 https://$host$request_uri;
  }
}
{% endif %}
